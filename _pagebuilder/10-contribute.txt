{{PAGETITLE="Contributing"}}
== Intent
* Do you have Wrye Bash related material that you would like to submit to this site? Are HTML and css style sheets over your head? The files and options provided will allow you to edit a simple text file that I will convert into content for the Wiki.

* Optionally if you would like to see what your work will look like on-line I provide an optional Python script that will generate HTML and allow you to double click the file from the windows explorer and see a very close approximation of what it will look like.

* Wrye has said in some of his Wrye Mash files that he built all of his pages using this system. I would presume that [[http://wryemusings.com/ | Wrye Musings]] was done this way as well. On this page you will be shown the Wrye Text format and given a download of a python script to run and convert your Wrye Text files to HTML that can be used on this site.

{{note:You do not need to know Python or HTML to contribute. The syntax of the text file is explained below along with optional instructions on how to install Python to use the script provided.}}

== What content would be accepted?
* Content should be Wrye related and related to Wrye Mash, and Wrye Bash programs. This can include BAIN installers for mods that do not currently have any or any other content that users could benefit from when using Wrye Bash.
* Mod lists and modding guides are also acceptable.
* There are many mods that are a must have so guides will include most of these mods. Try not to duplicate other content when possible.

== Contents ===================================================================
{{CONTENTS=3}}

== Requirement
* The <code>pagebuilder_v19.zip</code> contains all the files shown. However, in the future it may contain other files as well. As the file changes, the file name will have a version number added to it that you can compare to your copy. Then you will know if you have the most recent files.
### Download pagebuilder_v19.zip
{{image:pagebuilder.jpg | Page Builder Zipfile}}

* [[pagebuilder_v19.zip | pagebuilder_v19 Download Link.zip]]

### Example Template
As part of the pagebuilder archive you have <code>Wiki Page Template.txt</code>. This will be the file you will modify as desired for the wiki content you wish to present. I will convert it into usable HTML after you are done and you may update the content and submit the changes.

== Syntax =====================================================================
=== Your Pages Title

Your page title will become the first line on the page and will be assigned as the first header. To indicate this text use the following Wrye Tag. Add <code>{% raw %}{{PAGETITLE="Your Page Title"}}{% endraw %}</code> with opening and ending double curly brackets. The text in quotes will become the title of your page as shown below.

{{CONTENTS=0}}
= Your Page Title
{{CONTENTS=3}}

<hr>
=== Heading Style 1

* There are 4 levels of headings defined with different sizes of text and backgrounds.
* The level of the heading is determined by number of leading '='s. Trailing equal signs are ignored.
* These headings will have some shade of grey bar that extends the width of the page.

{{CONTENTS=0}}
= Heading 1
== Heading 2
=== Heading 3
==== Heading 4
{{CONTENTS=3}}

<hr>
=== Heading Style 2

* Like the previous heading the amount of leading '#'s determines the level of the heading.
* These headings will not have a bar as a background and will have green text
{{CONTENTS=0}}
# Heading 1
## Heading 2
### Heading 3
#### Heading 4
{{CONTENTS=3}}

<hr>
=== Table of Contents

A table of contents is automatically generated from the headers in the document. It is best to place the first content tag where you want the table of contents to be, and after a header named Contents. The number indicates the level of headers used. You should not use H1 except at the beginning of your page.

In addition to building a table of contents, both the headers and the table of contents will be numbered automatically. It is not necessary to number the headers manually because they will be renumbered automatically as well. The numbering relies on the numer at the begining of the file name. For exmaple all the numbers will start with <code>6.x</code> if the file name is <code>6-yourpagename.html</code>.

A value of two would use H2 headers:

* H2 Heading
* H2 Heading
* H2 Heading

A value of three would include H3 headers as well:

* H2 Heading
  * H3 Heading
* H2 Heading

A value of four would include H4 headers:

* H2 Heading
  * H3 Heading
    * H4 Heading
* H2 Heading

The syntax is as follows: <code>{% raw %}{{CONTENTS=2}}{% endraw %}</code> or <code>{% raw %}{{CONTENTS=0}}{% endraw %}</code> to pause using headers in the table of contents.

You can also disable using headers in the table of contents by using a value of <code>0</code>. The headers will not be recorded until there is another contents tag with a value greater than 0.

{{note:You can only use one value for the document. Meaning if you use the value of 2 you can not use 3 and later 4 and then later 2 again. Instead use headers in a meaningful way or omit the header by using a 0 value contents tag.}}

<hr>
=== Bullets
* Bullets1 - an asterisk <code>*</code> and a space would precede the text
  * Bullets 2 - two spaces and an asterisk <code>*</code> would precede the text
    * Bullets 3 - four spaces and an asterisk <code>*</code> would precede the text
      * Bullets 4 - six spaces and an asterisk <code>*</code> would precede the text
        * Bullets 5 - six spaces and an asterisk <code>*</code> would precede the text
          * Bullets 6 - six spaces and an asterisk <code>*</code> would precede the text
+ Alternate bullet char - a plus and a space <code>+ </code> would precede the text
o Alternate bullet char
. For an invisible bullet char you would use a period <code>.</code> at the beginning of the line.

<hr>
=== Styles
* ~~Italic~~ - You would surround the text using two tilde <code>~</code> symbols
* __Bold__ - You would surround the text using two underscore <code>_</code> symbols
* **BoldItalic** - You would surround the text using two asterisk <code>*</code> symbols

<hr>
=== Header Rule
There are two ways to make a Header Rule to separate content. The traditional HTML <code>&lt;hr&gt;</code> tag and by adding 4 hyphens <code>&#45;&#45;&#45;&#45;</code> at the beginning of a line.

----

{{note:The above white line used the 4 hyphens <code>&#45;&#45;&#45;&#45;</code> as the syntax.}}
=== Navigation Buttons
You can add Navigation Buttons to your document to help your reader navagate to other pages or sections on the same page. Below is the syntax for two buttons. The buttons will be arranged horizontally unless on a phone where they will appear vertically.

{% raw %}
<pre>
{{nbb}}
    [[https://wrye-code-collection.github.io/wcc-wiki/index.html | wcc-wiki]]
    [[https://sharlikran.github.io/ | Sharlikran]]
{{nbe}}
</pre>
{% endraw %}

Will produce dark teal buttons like this:

{{nbb}}
    [[#Versions | Versions]]
    [[#Contents | Contents]]
{{nbe}}

All Wrye Text link syntax is vallid.

{{nbb}}
    [[#Links | See Links]]
{{nbe}}
=== Extra Navigation
If you need to link to another part of a page or a different page then you can insert a navigation anchor. The anchor should be placed above the text you want to link to. That way once you click the link the page will move to the anchor and text (where you placed the anchor) will be positioned at the top of the browser.

{% raw %}
<pre>
{{nav:gotohere}}
</pre>
{% endraw %}

Once you add the navigation link you will need to make a link for users to click on to navigate to the anchor. To do so you need the link to start with  <code>#</code> Simply add that somewhere in the document above where you want the anchor

{% raw %}
<pre>
[[#|gotohere]]
</pre>
{% endraw %}

Click [[#|this link]] and it will jump to the Version section so you can see what happens with this type of anchor.

{{note:The anchor __does not__ start with a <code>#</code>. However, the link to the anchor __must__ start with a <code>#</code>.}}

/* 
&#91; is for [
&#93; is for ]
*/
=== Links
There are different ways to add a hyperlink to other content. The two examples that will be internal and external links.

<pre>
External Link: &#91;&#91;https://wryemusings.com/&#93;&#93; or &#91;&#91;https://wryemusings.com/ | Wrye Musings&#93;&#93;
</pre>
[[https://wryemusings.com/]] or [[https://wryemusings.com/ | Wrye Musings]]

Although the syntax is different they function the same. The difference with the second example is that it has link text. To specify link text you separate the hyperlink and the link text with a pipe <code>|</code> symbol which you get by using <code>SHIFT + \</code>.

<pre>
Internal Link 1: &#91;&#91;#Python Installation | Python Installation&#93;&#93;
Internal Link 2: &#91;&#91;#| Reuse and Credits&#93;&#93;
Internal Link 3: &#91;&#91;#ExtraNavigation | Extra Navigation&#93;&#93;
</pre>
Internal Link 1: [[#Python Installation | Python Installation]]
Internal Link 2: [[#| Reuse and Credits]]
Internal Link 3: [[#ExtraNavigation | Extra Navigation]]

There is no functional difference between the three examples. They will all link to another part of this document. One slight difference is that in the first two examples the text on the left side of the <code>|</code> has a space. The site builder will automatically convert that to a valid internal link. For a valid internal link you only need to specify the name of the header. The main benefit of this syntax is that as long as the header name does not change, it will not matter what other headers or sections of the document you add or remove. An internal link will always be valid as long as there is a matching header of the same name.

{{note:If you duplicate a header name a number will be appended to make the anchor unique. When that happens an internal link to a header will fail unless you specify the exact anchor produced by the pagebuilder. You will need to examine the HTML file generated.}} 

<hr>
=== Text Colors

There are 16 dark themed colors (17 if you count black) for you to choose from so they are not (at least to the best of my abilities) as blinding as their regular values. To use these colors you need to use the outdated HTML tag <code>font</code>. The tag needs to have the proper open and closing tag, and the name of the color will be assigned to the word class within quotes.

<pre>
&lt;font class="green"&gt;This is green&lt/font&gt;
</pre>

* <font class="black">This is black</font>
* <font class="blue">This is blue</font>
* <font class="brown">This is brown</font>
* <font class="cyan">This is cyan</font>
* <font class="dkgray">This is dkgray</font>
* <font class="gray">This is gray</font>
* <font class="green">This is green</font>
* <font class="ltblue">This is ltblue</font>
* <font class="ltgray">This is ltgray</font>
* <font class="ltgreen">This is ltgreen</font>
* <font class="orange">This is orange</font>
* <font class="pink">This is pink</font>
* <font class="purple">This is purple</font>
* <font class="red">This is red</font>
* <font class="tan">This is tan</font>
* <font class="white">This is white</font>
* <font class="yellow">This is yellow</font>

{{note:Obviously some colors will not contrast that well against this dark background but would look much better against a lighter background.}}

<hr>
/* 
&#91; is for [
&#93; is for ]
*/
=== Link Colors

You may be contributing a guide that has people download a mod and you wish to color code them to indicate a special purpose. Maybe the file needs to be converted from Skyrim to Skyrim SE or maybe the mod has special install procedures that make it complicated for new users. Whatever the case may be there is a tag that you may use to indicate the link color.

<pre>
{% raw %}{{a:green}}{% endraw %}</code> in the link's name field will be used to color the link green.
{% raw %}&#91;&#91;https://github.com/Sharlikran | The Link Text Will Be Green{{a:green}}&#93;&#93;{% endraw %}
</pre>

{% raw %}
[[https://sharlikran.github.io/ | This Link Text is Orange{{a:orange}}]]
{% endraw %}

{{note:The tag must be with the link name or it will be ignored.}}
<hr>
=== Html
* <i>Html tags work fine</i>
* <code>code tag has special formatting</code>
* **pre** tag is useful for code
<pre>
begin widgetScript
short counter
end
</pre>

Refrain from using too many HTML tags if you know the language well. If special styling is needed I can look into a way to provide additional options. However, I would like to keep this custom markdown language as simple as possible so it doesn't become another type of HTML.

<hr>
=== Blockquote
To add a blockquote tag you will need to specify an author for the blockquote. To do so simply add the author name after the colon <code>:</code> symbol. This will be converted into the authors name and placed at the top of the blockquote.

{% raw %}
<pre>
[[bb:Quote]]
Example of text in a blockquote
[[be:]]
</pre>
{% endraw %}

[[bb:Quote]]
. This is quoted text from another author.
. You can also put a blockquote around text for other reasons.
. The title of the blockquote can be assigned the author of the quote or even just the word Quote.
[[be:]]

<hr>
=== Spoiler Tags

To add a spoiler tag you will need to specify both an ID for the spoiler and the spoiler name separated with a pipe <code>|</code> symbol. This will connect the spoiler contents, name, and the button.

{% raw %}<pre>
[[sb:Spoiler1 | Spoiler Name]]
Example of text in the spoiler tag
[[se:]]
</pre>{% endraw %}

[[sb:spoiLer1 | Spoiler Name]]
Example of text in the spoiler tag
[[se:]]

/*
&#123; = {
&#125; = } 
*/
=== Notes

A note can be added simply by adding the note tag shown below.

{% raw %}
<pre>
&#123;&#123;note:Example of text for a note.&#125;&#125;
</pre>
{% endraw %}

{{note:The note will appear to the right of the image in a bordered box as shown.}}

=== Other Formatting & HTML Elements

GitHub uses Jekyll pages. It will process certain characters in an undesirable way. In a future version of pagebuilder I will try to automate this process. For now if you have any of the following characters you can use their HTML element so they are displayed correctly.

<pre>
&amp;#123; = {
&amp;#125; = } 
&amp;#91; is for [
&amp;#93; is for ]
&amp;lt; is for <
&amp;gt; is for >
</pre>

{{note:Blank lines can be used as spacers}}

<hr>
=== Comments

Wrye Text will allow a variation of C Language type comments. Comments will not be output to the final HTML file for the Wiki. Useful for remembering information you don't need to end up in the Wiki itself.

==== Allowed Syntax

{% raw %}<pre>
/* comment goes here */
</pre>{% endraw %}

OR

{% raw %}<pre>
/*
 comment goes here
*/
</pre>{% endraw %}

{{note:Comments inside of <code>&lt;pre&gt;</code> or preformatted text elements will not be treated as a comment. For now both single and multi line comments require a trailing <code>*/</code> or the HTML will not be generated properly.}}

==== Invalid Syntax

{% raw %}<pre>
// This is a single line comment
</pre>{% endraw %}

OR

{% raw %}<pre>
* This is a bullet of something
* This is a link to a mod // This is a comment after the link
</pre>{% endraw %}

=== Images
I apologize for the rather cryptic way of doing this. I needed something easy to work with that didn't require a ridiculous amount of code.
=== Adding an Image
The syntax for an image requires the name of the file and alternate text if the image is not showing.

#### Example syntax for an Image
{% raw %}<pre>
{{image:pagebuilder.jpg | Page Builder Image}}
</pre>{% endraw %}

#### Example of an Image
{{image:pagebuilder.jpg | Page Builder Image}}
<hr>
=== Adding an Image with a Caption
The syntax for an image with a caption requires the name of the file, alternate text, and a caption. The box for the caption will be the width of the image and will wordwrap.

#### Example syntax for an Image with Caption
{% raw %}<pre>
{{image-caption:pagebuilder.jpg | Page Builder Image | This is what the zip looks like}}
</pre>{% endraw %}

#### Example Image with a Caption
{{image-caption:pagebuilder.jpg | Page Builder Image | This is what the zip looks like}}
<hr>
=== Adding an Image with Caption and Hyperlink
The syntax for an image with a caption and a hyperlink will require five elements. The name of the file, alternate text, and a caption. In addition to that you need two elements for the hyperlink, the hyperlink itself and a name for the link. The box for the caption will be the width of the image and will wordwrap. The link will appear under the caption and will not be the width of the image.

#### Example syntax Image with a Caption and Hyperlink
{% raw %}<pre>
{{image-cap-url:pagebuilder.jpg | Page Builder Image | This is what the zip looks like | pagebuilder_v19.zip | Page Builder Zip}}
</pre>{% endraw %}

#### Example Image with Caption and Hyperlink
{{image-cap-url:pagebuilder.jpg | Page Builder Image | This is what the zip looks like | pagebuilder_v19.zip | Page Builder Zip}}
<hr>
=== Adding an inline Image
You can use small inline images between {{inline:20px | Sqinter.png | Wrye Avatar}} text.

{{inline:20px | Sqdiscus.png | Sqdiscus}} You can also use a small icon at the beginning of a sentence using the inline image Wrye Tag.

Keep in mind you would want to use small images about 24 to 36 pixels or less. Using large inline {{inline:96px | wrye_monkey_96.png | Wrye Avatar}} images will look silly.

#### Example syntax for an inline image
{% raw %}<pre>
{{inline:96px | wrye_monkey_96.png | Page Builder}}
</pre>{% endraw %}

#### Example of an inline image
{{inline:96px | wrye_monkey_96.png | Wrye Avatar}} Wrye's Avatar
<hr>
{{nav:thislink}}
== Versions ===================================================================

=== 19.00 Update [1/26/2020]
* released pagebuilder_v19.zip version 19
  * More updates to hyperlink functions

=== 18.00 Update [1/25/2020]
* released pagebuilder_v18.zip version 18
  * Fixed bug when compressing an internal link
  * Added additional note syntax. See [[#Notes | Notes]]
  
=== 17.00 Update [1/25/2020]
* released pagebuilder_v17.zip version 17
  * Updated Regex for various thins to capture the text more accurately
  * Updated link generation (Provided it is valid to begin with)
  * Updated header renumbering to use altered header text instead of original text
  . from when it was first captured.

=== 16.00 Update [1/25/2020]
* released pagebuilder_v16.zip version 16
  * Remove and assign color better for links
  * Handle Paragraphs Better
  * Provide more control for Preformatted Blocks

=== 15.00 Update [1/24/2020]
* released pagebuilder_v15.zip version 15
  * Fixed bug in page auto renumbering when there is no number prefix for the
  . filename.

{{CONTENTS=0}}
=== 14.00 Update [1/22/2020]
* released pagebuilder_v14.zip version 14
  * Updated builder to auto renumber page
  * Numbering is bassed on the number prefix of the file name

=== 13.00 Update [1/21/2020]
* released pagebuilder_v13.zip version 13
  * Added syntax for Navigation Buttons

{{nbb}}
    [[#NavigationButtons | See Navigation Buttons]]
{{nbe}}

=== 12.00 Update [1/19/2020]
* released pagebuilder_v12.zip version 12
  * Updated builder for Table Of Contents

=== 11.00 Update [1/18/2020]
* released pagebuilder_v11.zip version 11
  * Added navigation anchor see [[#|ExtraNavigation]]

=== 10.00 Update [1/18/2020]
* released pagebuilder_v10.zip version 10
  * Removed max-width from images except inline images

=== 9.00 Update [1/17/2020]
* released pagebuilder_v9.zip version 9
  * Added image Wrye Tags see [[#| Images]]
  * Updated CSS for user page builder

=== 8.00 Update [1/16/2020]
* released pagebuilder_v8.zip version 8
  * Updated CSS to reflect changes
  * Added Pagetitle to Pseudo Page Header

=== 7.00 Update [1/15/2020]
* released pagebuilder_v7.zip version 7
  * Added a Blockquote Tag see [[#| Blockquote]]
  * Font and Code tags at the start of a line were not assigned a paragraph marker and thus not indenting.

=== 6.00 Update [1/11/2020]
* released pagebuilder_v6.zip version 6
  * Alter spoiler button to expand its width when there is more text

=== 5.00 Update [1/11/2020]
* released pagebuilder_v5.zip version 5
  * Fixed a bug in changing color for Internal Links

=== 4.00 Update [1/10/2020]
* released pagebuilder_v4.zip version 4
  * Added Spoiler Tags see [[#| SpoilerTags]]

=== 3.00 Update [1/10/2020]
* released pagebuilder_v3.zip version 3
  * Added C Language type comments see [[#| Comments]]

=== 2.00 Update [1/8/2020]
* released pagebuilder_v2.zip version 2
  * Only the site CSS will be used to illustrate what the finished HTML should look like. Removed the ability to use alternate CSS for end user.

=== 1.00 Update [1/7/2020]
* released pagebuilder_v1.zip version 1
  * This version has a new file in it <code>wtxt-wiki-user.py</code>. That is the file you will use if you want to see what your page will look like once converted to use on the website.

=== 0.00 Initial Release [1/1/2020]
* released pagebuilder.zip version 0
{{CONTENTS=3}}
== Optional Requirement
* To generate the HTML files you will need the latest python from Python.org. These files are written for 2.7.x and the current Python 2.7.17 will work just fine. The link is for the 32 bit version. Please download that because the setup will go smoother and add needed configurations to your computer to run the python scripts provided.
* Below is a link to Python 2.7.17 and a link to the pagebuilder script and sample file you can generate right away to see it working.
* [[https://www.python.org/ftp/python/2.7.17/python-2.7.17.msi | Download Python 2.7.17]]

=== Python Installation ===============================================================
###  Where are the files I just downloaded?
* The files usually end up in your windows Downloads folder as shown below.
{{image:downloadedfiles.jpg | Downloaded Files}}
* Open your windows explorer and on the left navigate to your Downloads folder.
* First you will install Python and then be shown where to put the Python scripts and example files.
### Installing Python
* Your version of python will be different then show here. What is important is the install location. Leave it at the default settings so that you can follow the instructions for building HTML files with Python.
{{image:pythoninstall.jpg | Python Install}}
* The Python installation will be very simple, just click next and leave all the default settings.
### Installing Python script for use
* Once installed Python you will need to unzip the python script and sample text file used to build the html file.
* These are really not installed on your system automatically so we will be copying them.
* Windows should have a way to open this type of zip file itself but if needed you can download 7zip from [[https://www.7-zip.org/ | 7-zip.org]]. It is safe, free and, easy to use.
{{image:unzipfiles.jpg | Unzip Files}}
* To unzip file files simply right click on them and choose <code>Extract to "pagebuilder\"</code>
{{image:copyfolder.jpg | Copy Folder}}
* Now we will be copying the files to a more convenient location to run them easily. If left in the Downloads folder or copied onto the Desktop to run the script means you will have to type in command similar to this. <code>C:\Python27\python.exe C:\Users\[username]\Downloads\pagebuilder\wtxt-wiki-user.py genHtml "Wiki Page Template.txt"</code>. While not difficult we will simplify that some to make it easier.
* Right click the <code>pagebuilder</code> folder and, choose Copy
{{image:choosecopy.jpg | Choose Copy}}
* Navigate to the C Drive
{{image:gotocdrive.jpg | Choose C Drive}}
* Right click in an empty space and, choose Paste.
{{image:choosepaste.jpg | Choose Paste}}
* Once copied to the C: drive double click the pagebuilder folder and you should see the example file and the Python script
{{image:copiedforuse.jpg | Pagebuilder Copied}}
* To run python and process the example file you need to open a command prompt since Python does not have its own GUI interface.
. Type <code>cmd</code> in the red box, and right click <code>cmd.exe</code> and choose "Run As Administrator" as shown in the green box.
{{image:opencommand.jpg | Open CMD Prompt}}
. Which will look like this once it's open
{{image:commandopen.jpg | CMD Prompt Open}}
. As mentioned we needed to put that folder somewhere so that there would be less typing.
. As shown type <code>cd c:\pagebuilder</code> and press <code>[ENTER]</code>
{{image:changedir.jpg | Change Directory}}
. Now we will run the python script to produce a sample HTML output so you can see a close version of what will be in the wiki.
. As shown type <code>c:\python27\python.exe wtxt-wiki-user.py genHtml "Wiki Page Template.txt"</code> and press <code>[ENTER]</code>
{{image:runpython.jpg | Run Python}}
. There were no errors and now <code>Wiki Page Template.html</code> appears in the <code>pagebuilder</code> folder.
{{image:outputhtml.jpg | Output HTML}}
. Double click <code>Wiki Page Template.html</code> and you will see more or less what the page would look like.
{{image:examplehtml.jpg | Example HTML}}

Add the content you wish to add, regenerating the HTML as you go and, you are on your way to producing content for the wiki.

== Reuse and Credits ==========================================================

=== License: WML 1.0 Modify and Redistribute, Share Alike
* You are free to redistribute this work in unmodified form.
* You are free to modify and re-distribute this work, so long as you: 1) give the author(s) credit proportional to their contribution to the final work, 2) distribute the final work under the same terms, and 3) make artistic resources included with the final work available under these same terms.

=== Credits
* **Wrye**, for creating this markdown language
